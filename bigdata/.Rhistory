?dnorm
?pnorm
x <- seq(-4, 4, 0.05)
x <- seq(-4, 4, 0.05)
x
dnorm(x)
par(mfrow=c(2,1))
plot(x, dnorm(x), type="l")
plot(x,pnorm(x),type="l")
?dbinom
dbinom(0:10, 10, 1/2)
dbinom(0:10, 20, 1/2)
dbinom(0:10, 30, 1/2)
dbinom(0:10, 10, 1/2)
plot(0:10, dbinom(0:10,10,1/3), type="h")
plot(0:10,dbinom(0:10,10,1/2),xlab="x",ylab="pdf", type="h",main="B(10,1/2)")
par(mfrow=c(2,2))
plot(0:10,dbinom(0:10,10,2/3),xlab="x",ylab="pdf", type="h",main="B(10,2/3)")
plot(0:10,dbinom(0:10,10,1/2),xlab="x",ylab="pdf", type="l",main="B(10,1/2) with type=l")
?rnorm
rnorm(30)
?dnorm
plot(0:40, dbinom(0:10,40,1/8))
plot(0:40, dbinom(0:40,40,1/8))
plot(0:10, dbinom(0:10,40,1/8))
?dbinom
?dnorm
?lines
?runif
runif(100)
runif(100, min=0, max=100)
?pnorm
x <- seq(-4, 4, 0.05)
plot(x, dnorm(x), type="l")
plot(x,pnorm(x),type="l")
factorial(5)
source('~/Desktop/통계전산실습/시험/5장.R')
cal(1/2, 4)
cal(1/2, 4)
1/2^4
0.5 * 0.5 * 0.5 * 0.5
1-1/2
0.5^5-4
source('~/Desktop/통계전산실습/시험/5장.R')
cal(1/2, 4)
cal(1/2, 5)
cal(4/5, 0)
cal(4/5, 1)
cal(4/5, 2)
cal(4/5, 3)
cal(4/5, 4)
cal(4/5, 5)
Sys.setlocale("LC_CTYPE", "ko_KR.UTF-8")
set.seed(123)
hist(rnorm(1000),breaks=30,probability=TRUE)#정규분포
set.seed(123)
hist(runif(1000),breaks=30,probability=TRUE)#균등분포
set.seed(123)
hist(rcauchy(1000),breaks=30,probability=TRUE)#코시분포
set.seed(123)
hist(rchisq(1000,df=1)-1,breaks=30,probability=TRUE)#카이제곱분포
?hist
set.seed(123)
hist(rnorm(1000),breaks=30,probability=TRUE)#정규분포
set.seed(123)
hist(rnorm(1000),breaks=10,probability=TRUE)#정규분포
set.seed(123)
hist(rnorm(1000),breaks=5,probability=TRUE)#정규분포
set.seed(123)
hist(rnorm(1000),breaks=5,probability=TRUE)#정규분포
set.seed(123)
hist(rnorm(1000),breaks=8,probability=TRUE)#정규분포
set.seed(123)
hist(rnorm(1000),breaks=8,probability=TRUE)#정규분포
set.seed(123)
hist(rnorm(1000),breaks=8,probability=TRUE)#정규분포
set.seed(123)
hist(rnorm(1000),breaks=50,probability=TRUE)#정규분포
rnorm(5)
rnorm(5)
set.seed(12345)
rnorm(5)
rnorm(5)
set.seed(12345)
set.seed(12345)
rnorm(5)
set.seed(12345)
rnorm(5)
?rcauchy
set.seed(1234)
plot(timeseries_data(-1.2,100,'rnorm'),type='l',xlab='t',ylab='Xt',main='rho=-1.2')
##1. 타임시리즈 데이터를 생성하는 함수
timeseries_data<-function(rho,nsmp,dtb,		#rho는 rho,nsmp는 표본 수,dtb는 분포
rnorm_mean=0,rnorm_std=1,	#정규분포 옵션(평균,표준편차)
runif_min=-1,runif_max=1,	#균등분포 옵션(최소,최대)
rcauchy_loc=0,rcauchy_scale=1,	#코시분포 옵션(위치모수,척도모수)
rchisq_df=1				#카이제곱분포 옵션(자유도)
)
{
if(dtb=='rnorm'){n<-rnorm(nsmp,rnorm_mean,rnorm_std)}		#오차 생성
else if (dtb=='runif'){n<-runif(nsmp,runif_min,runif_max)}
else if (dtb=='rcauchy'){n<-rcauchy(nsmp,rcauchy_loc,rcauchy_scale)}
else if (dtb=='rchisq'){n<-rchisq(nsmp,df=rchisq_df)-1}
else{geterrmessage('이 함수는 정규분포, 균등분포,코시분포에서만 표본추출이 가능합니다.')}
rh<-vector()
xx<-vector()	#객체 생성
for (i in 1:length(n)) 	# rho 생성 1, rho, rho**2, ... rho**(t-1)
{
rh[i]<-(rho)**(i-1)
}
for (i in 1:length(n))
{
xx[i]<-sum(rh[1:i]*n[i:1])	#1*Et + rho*Et-1 + .....
}
return(xx)
} # timeseries_data function
set.seed(1234)
plot(timeseries_data(-1.2,100,'rnorm'),type='l',xlab='t',ylab='Xt',main='rho=-1.2')
set.seed(1234)
plot(timeseries_data(-1.2,100,'runif'),type='l',xlab='t',ylab='Xt',main='rho=-1.2')
set.seed(1234)
plot(timeseries_data(-1.2,100,'rcauchy'),type='l',xlab='t',ylab='Xt',main='rho=-1.2')
source('~/Desktop/University/2019-2/bigdata/1일차_프로젝트코드_기울기랜덤워크검정.R', encoding = 'CP949')
source('~/Desktop/University/2019-2/bigdata/1일차_프로젝트코드_기울기랜덤워크검정.R', encoding = 'CP949')
xt_plot(1,100,'rnorm')
xt_plot(1,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(-1,100,'rchisq')
source('~/Desktop/University/2019-2/bigdata/1일차_프로젝트코드_기울기랜덤워크검정.R', encoding = 'CP949')
xt_plot(-1,100,'rchisq')
source('~/Desktop/University/2019-2/bigdata/1일차_프로젝트코드_기울기랜덤워크검정.R', encoding = 'CP949')
source('~/Desktop/University/2019-2/bigdata/1일차_프로젝트코드_기울기랜덤워크검정.R', encoding = 'CP949')
source('~/Desktop/University/2019-2/bigdata/1일차_프로젝트코드_기울기랜덤워크검정.R', encoding = 'CP949')
source('~/Desktop/University/2019-2/bigdata/1일차_프로젝트코드_기울기랜덤워크검정.R', encoding = 'CP949')
xt_plot(-1,100,'rchisq')
source('~/Desktop/University/2019-2/bigdata/1일차_프로젝트코드_기울기랜덤워크검정.R', encoding = 'CP949')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
set.seed(123)
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
set.seed(123)
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
set.seed(123)
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
set.seed(123)
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
set.seed(123)
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
set.seed(123)
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
set.seed(123)
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
set.seed(123)
xt_plot(0,100,'rchisq')
xt_plot(1,100,'rchisq')
xt_plot(1.1,100,'rchisq')
xt_plot(-1.1,100,'rchisq')
for i in number:
for(i in 10):
for(i in 10)
print(i)
sample(c(1,-1), 1)
sample(c(1,-1), 1)
sample(c(1,-1), 1)
sample(c(1,-1), 1)
sample(c(1,-1), 1)
sample(c(1,-1), 1)
sample(c(1,-1), 1)
sample(c(1,-1), 1)
sample(c(1,-1), 1)
a = 5
print("a is ", a)
cat("a is", a)
cat("a is ", a)
error = sample(c(1,-1), 1)
cat(a, "th error:", error)
source('~/.active-rstudio-document')
random_walk(10)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
random_walk(10)
source('~/.active-rstudio-document')
random_walk(10)
source('~/.active-rstudio-document')
random_walk(10)
source('~/.active-rstudio-document')
random_walk(10)
source('~/.active-rstudio-document')
random_walk(10)
random_walk(10)
random_walk(10)
random_walk(10)
random_walk(10)
random_walk(10)
data(AirPassengers)
data(AirPassengers)
force(AirPassengers)
AirPassengers
class(AirPassengers)
?class
a = 1
class(a)
start(AirPassengers)
end(AirPassengers)
frequency(AirPassengers)
summary(AirPassengers)
plot(AirPassengers)
abline(reg=lm(AirPassengers~time(AirPassengers)))
cycle(AirPassengers)
plot(aggregate(AirPassengers, FUN=mean))
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(AirPassengers)
abline(reg=lm(AirPassengers~time(AirPassengers)))
plot(aggregate(AirPassengers, FUN=mean))
source('~/.active-rstudio-document')
c(samsung_profit_2016, samsung_profit_2017)
samsung_total_revenue = c(samsung_profit_2016 + samsung_revenue_2017 + samsung_revenue_2018
+ samsung_revenue_2019)
samsung_total_revenue = c(samsung_profit_2016 + samsung_revenue_2017 + samsung_revenue_2018 + samsung_revenue_2019)
samsung_total_revenue = c(samsung_revenue_2016 + samsung_revenue_2017 + samsung_revenue_2018 + samsung_revenue_2019)
samsung_total_revenue = c(samsung_revenue_2016, samsung_revenue_2017,
samsung_revenue_2018, samsung_revenue_2019)
samsung_total_revenue
samsung_total_profit = c(samsung_profit_2016, samsung_profit_2017,
samsung_profit_2018, samsung_profit_2019)
samsung_total_profit
df = data.frame(samsung_total_revenue, samsung_total_profit)
df
df <- data.frame(x = c(TRUE, FALSE, NA, NA), y = c(12, 34, 56, 78))
df
row.names(df) <- 1:4
df
attr(df, "row.names")
deparse(df)
row.names(df)
row.names(df) <- c(2, 4, 6, 8)
df
df = data.frame(samsung_total_revenue, samsung_total_profit)
row.names(df) <- ("2016_1Q", "2016_2Q", "2016_3Q", "2016_4Q",
"2017_1Q", "2017_2Q", "2017_3Q", "2017_4Q",
"2018_1Q", "2018_2Q", "2018_3Q", "2018_4Q",
"2019_1Q", "2019_2Q", "2019_3Q")
df = data.frame(samsung_total_revenue, samsung_total_profit)
row.names(df) <- c("2016_1Q", "2016_2Q", "2016_3Q", "2016_4Q",
"2017_1Q", "2017_2Q", "2017_3Q", "2017_4Q",
"2018_1Q", "2018_2Q", "2018_3Q", "2018_4Q",
"2019_1Q", "2019_2Q", "2019_3Q")
df
col.names(df) <- c("매출", "영업이익")
colnames(df) <- c("매출", "영업이익")
df
samsung_data = data.frame(samsung_total_revenue, samsung_total_profit)
row.names(samsung_data) <- c("2016_1Q", "2016_2Q", "2016_3Q", "2016_4Q",
"2017_1Q", "2017_2Q", "2017_3Q", "2017_4Q",
"2018_1Q", "2018_2Q", "2018_3Q", "2018_4Q",
"2019_1Q", "2019_2Q", "2019_3Q")
colnames(samsung_data) <- c("매출", "영업이익")
samsung_data
마 = a
마 = 1
마
source('~/.active-rstudio-document')
samsung_data
source('~/.active-rstudio-document')
View(samsung_data)
library(ggplot2)
View(df)
source('~/.active-rstudio-document')
View(samsung_data)
View(samsung_data)
profit
revenue
quarter
View(samsung_data)
View(samsung_data)
samsung_data = data.frame(분기=quarter, 매출=revenue, 영업이익=profit)
samsung_data
View(samsung_data)
source('~/Desktop/University/2019-2/bigdata/파이널프로젝트.R', encoding = 'CP949')
View(samsung_data)
ggplot(data=samsung_data, aes(x=quarter, y=revenue, group=1)) +
geom_line() +
geom_point()
ggplot(data=samsung_data, aes(x=quarter, y=revenue, group=1)) +
geom_line()
geom_point()
ggplot(data=samsung_data, aes(x=quarter, y=revenue, group=1)) +
geom_point()
ggplot(data=samsung_data, aes(x=quarter, y=profit, group=1)) +
geom_line() +
geom_point()
ggplot() +
geom_line(data=samsung_data, aes(x=quarter, y=revenue), color="blue") +
geom_line(data=samsung_data, aes(x=quarter, y=profit), color="red") +
geom_point()
ggplot() +
geom_line(data=samsung_data, aes(x=quarter, y=profit), color="red") +
geom_line(data=samsung_data, aes(x=quarter, y=revenue), color="red")
source('~/.active-rstudio-document')
View(prescription1)
View(prescription2)
View(prescription1)
View(prescription1)
ggplot(samsung_data, aes(x=quarter)) +
source('~/Desktop/University/2019-2/bigdata/파이널프로젝트.R', encoding = 'CP949')
source('~/Desktop/University/2019-2/bigdata/파이널프로젝트.R', encoding = 'CP949')
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y=revenue)), color = "blue") +
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y=revenue), color = "blue") +
geom_line(aes(y=profit), color = "red") +
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y=profit), color = "red") +
geom_line(aes(y=revenue), color = "blue")
ggplot(economics, aes(x=분기)) +
geom_line(aes(y = 매출), color = "darkred") +
geom_line(aes(y = 영업이익), color="steelblue")
View(samsung_data)
source('~/Desktop/University/2019-2/bigdata/파이널프로젝트.R', encoding = 'CP949')
ggplot(economics, aes(x=a)) +
geom_line(aes(y = b), color = "darkred") +
geom_line(aes(y = c), color="steelblue")
ggplot(samsung_data, aes(x=a)) +
geom_line(aes(y = b), color = "darkred") +
geom_line(aes(y = c), color="steelblue")
ggplot(samsung_data, aes(x=a), group=1) +
geom_line(aes(y = b), color = "darkred") +
geom_line(aes(y = c), color="steelblue")
source('~/Desktop/University/2019-2/bigdata/파이널프로젝트.R', encoding = 'CP949')
ggplot(samsung_data, aes(x=quarter), group=1) +
geom_line(aes(y = revenue), color = "darkred") +
geom_line(aes(y = profit), color="steelblue")
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred")
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred") +
geom_point()
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred") +
geom_point(aes(y = revenue))
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred") +
geom_point(aes(y = revenue)) +
# 이익
geom_line(aes(y = profit), color="steelblue") +
geom_point(aes(y = profit))
# 이익실적 그래프를 그림
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred") +
geom_point(aes(y = revenue)) +
# 이익
geom_line(aes(y = profit), group=1, color="steelblue") +
geom_point(aes(y = profit))
p <- ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred") +
geom_point(aes(y = revenue)) +
# 이익
geom_line(aes(y = profit), group=1, color="steelblue") +
geom_point(aes(y = profit))
p
p + theme(legend.position="bottom")
# 이익실적 그래프를 그림
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred") +
geom_point(aes(y = revenue)) +
# 이익
geom_line(aes(y = profit), group=1, color="steelblue") +
geom_point(aes(y = profit))
source('~/Desktop/University/2019-2/bigdata/파이널프로젝트.R', encoding = 'CP949')
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred") +
geom_point(aes(y = revenue)) +
# 이익
geom_line(aes(y = profit), group=1, color="steelblue") +
geom_point(aes(y = profit))
install.packages("readxl")
library("readxl")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(my_data)
source('~/.active-rstudio-document')
View(my_data)
source('~/.active-rstudio-document')
View(after_stock_split)
View(my_data)
source('~/.active-rstudio-document')
setwd("~/Desktop/University/2019-2/bigdata")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(beofre_stock_split)
type(after_stock_split)
class(after_stock_split)
after_stock_split[after_stock_split$종가]
after_stock_split[after_stock_split$종가, ]
after_stock_split$종가
after_stock_split$종가
after_stock_split$종가
before_stock_split$종가
source('~/.active-rstudio-document')
after_stock_split$종가
before_stock_split$종가
##1. 타임시리즈 데이터를 생성하는 함수
timeseries_data<-function(rho,nsmp,dtb,		#rho는 rho,nsmp는 표본 수,dtb는 분포
rnorm_mean=0,rnorm_std=1,	#정규분포 옵션(평균,표준편차)
runif_min=-1,runif_max=1,	#균등분포 옵션(최소,최대)
rcauchy_loc=0,rcauchy_scale=1,	#코시분포 옵션(위치모수,척도모수)
rchisq_df=1				#카이제곱분포 옵션(자유도)
)
{
if(dtb=='rnorm'){n<-rnorm(nsmp,rnorm_mean,rnorm_std)}		#오차 생성
else if (dtb=='runif'){n<-runif(nsmp,runif_min,runif_max)}
else if (dtb=='rcauchy'){n<-rcauchy(nsmp,rcauchy_loc,rcauchy_scale)}
else if (dtb=='rchisq'){n<-rchisq(nsmp,df=rchisq_df)-1}
else{geterrmessage('이 함수는 정규분포, 균등분포,코시분포에서만 표본추출이 가능합니다.')}
rh<-vector()
xx<-vector()	#객체 생성
for (i in 1:length(n)) 	# rho 생성 1, rho, rho**2, ... rho**(t-1)
{
rh[i]<-(rho)**(i-1)
}
for (i in 1:length(n))
{
xx[i]<-sum(rh[1:i]*n[i:1])	#1*Et + rho*Et-1 + .....
}
return(xx)
} # timeseries_data function
View(timeseries_data)
source('~/.active-rstudio-document')
plot(after_stock_split)
x = c(1,2,3)
plot(x)
plot(after_stock_split$종가)
plot(after_stock_split$종가, type="l")
plot(before_stock_split$종가, type="l")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(after_stock_split$종가, type="l",
main="액면분할 후 삼성전자 주식가격시도표"
xlab="t", ylab="xt(price)")
plot(after_stock_split$종가, type="l",
main="액면분할 후 삼성전자 주식가격시도표",
xlab="t", ylab="xt(price)")
plot(before_stock_split$종가, type="l",
main="Samsung Stock Price Before Split",
xlab="t", ylab="xt(price)")
source('~/Desktop/University/2019-2/bigdata/파이널프로젝트.R', encoding = 'CP949')
ggplot(samsung_data, aes(x=quarter)) +
geom_line(aes(y = revenue), group=1, color = "darkred") +
geom_point(aes(y = revenue)) +
# 이익
geom_line(aes(y = profit), group=1, color="steelblue") +
geom_point(aes(y = profit))
# timeseries graph for both before & after
plot(after_stock_split$종가, type="l",
main="Samsung Stock Price After Split",
xlab="t", ylab="xt(price)")
plot(before_stock_split$종가, type="l",
main="Samsung Stock Price Before Split",
xlab="t", ylab="xt(price)")
plot(after_stock_split$종가, type="l",
main="Samsung Stock Price After Split",
xlab="t", ylab="xt(price)")
source('~/Desktop/University/2019-2/bigdata/파이널프로젝트.R', encoding = 'CP949')
